local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local userInputService = game:GetService("UserInputService")
local runService = game:GetService("RunService")
local tweenService = game:GetService("TweenService")

local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

local superSonic = false
local transforming = false
local speedBoost = 500
local normalSpeed = 16
local emeralds = {}
local trail = nil -- Trail variable
local modelHighlight = nil -- whole model highlight variable

-- Animation IDs
local transformedIdleAnimationId = "rbxassetid://99997181191466"
local transformedRunAnimationId = "rbxassetid://102072284279994"

-- Animation objects and tracks
local transformedIdleAnim = Instance.new("Animation")
transformedIdleAnim.AnimationId = transformedIdleAnimationId
local transformedIdleTrack = nil

local transformedRunAnim = Instance.new("Animation")
transformedRunAnim.AnimationId = transformedRunAnimationId
local transformedRunTrack = nil

local emeraldColors = {
	Color3.fromRGB(255, 0, 0),     -- Red
	Color3.fromRGB(0, 255, 0),     -- Green
	Color3.fromRGB(0, 0, 255),     -- Blue
	Color3.fromRGB(255, 255, 0),   -- Yellow
	Color3.fromRGB(255, 0, 255),   -- Magenta
	Color3.fromRGB(0, 255, 255),   -- Cyan
	Color3.fromRGB(255, 255, 255)  -- White
}

local cubeSizes = {
	Vector3.new(1, 0.7, 1),
	Vector3.new(0.7, 0.5, 0.7),
	Vector3.new(0.4, 0.3, 0.4)
}

local flashGui = Instance.new("ScreenGui")
flashGui.Name = "SuperSonicFlash"
flashGui.ResetOnSpawn = false
flashGui.IgnoreGuiInset = true
flashGui.Parent = player:WaitForChild("PlayerGui")

local creditLabel = Instance.new("TextLabel")
creditLabel.Size = UDim2.new(1, 0, 0, 30)
creditLabel.Position = UDim2.new(0, 0, 0, 0)
creditLabel.BackgroundTransparency = 1
creditLabel.Text = "Created by: @thoroughlybuttered on youtube"
creditLabel.TextColor3 = Color3.new(1, 1, 1)
creditLabel.TextScaled = true
creditLabel.Font = Enum.Font.SourceSansBold
creditLabel.Parent = flashGui

local flashFrame = Instance.new("Frame")
flashFrame.BackgroundColor3 = Color3.new(1, 1, 1)
flashFrame.Size = UDim2.new(1, 0, 1, 0)
flashFrame.BackgroundTransparency = 1
flashFrame.Visible = false
flashFrame.Parent = flashGui

local function flashScreen()
	flashFrame.BackgroundTransparency = 1
	flashFrame.Visible = true

	local flashIn = tweenService:Create(flashFrame, TweenInfo.new(0.1), { BackgroundTransparency = 0 })
	local flashOut = tweenService:Create(flashFrame, TweenInfo.new(0.2), { BackgroundTransparency = 1 })

	flashIn:Play()
	flashIn.Completed:Wait()
	flashOut:Play()
	flashOut.Completed:Wait()
	flashFrame.Visible = false
end

local function highlightAccessories()
	for _, accessory in pairs(character:GetChildren()) do
		if accessory:IsA("Accessory") then
			local handle = accessory:FindFirstChild("Handle")
			if handle then
				for _, child in pairs(handle:GetChildren()) do
					if child:IsA("Highlight") then
						child:Destroy()
					end
				end

				local highlight = Instance.new("Highlight")
				highlight.Adornee = handle
				highlight.FillColor = Color3.fromRGB(255, 255, 0)
				highlight.OutlineColor = Color3.fromRGB(255, 255, 0)
				highlight.FillTransparency = 0
				highlight.OutlineTransparency = 0
				highlight.DepthMode = Enum.HighlightDepthMode.Occluded
				highlight.Parent = handle
			end
		end
	end
end

local function clearHighlights()
	for _, accessory in pairs(character:GetChildren()) do
		if accessory:IsA("Accessory") then
			local handle = accessory:FindFirstChild("Handle")
			if handle then
				for _, child in pairs(handle:GetChildren()) do
					if child:IsA("Highlight") then
						child:Destroy()
					end
				end
			end
		end
	end
end

local function createTrail()
	if trail then return end
	trail = Instance.new("Trail")
	trail.Color = ColorSequence.new(Color3.fromRGB(255, 255, 0))
	trail.LightEmission = 1
	trail.Lifetime = 0.5
	trail.Attachment0 = Instance.new("Attachment", rootPart)
	trail.Attachment1 = Instance.new("Attachment", rootPart)
	trail.Attachment0.Position = Vector3.new(0, 1, 0)    -- Top of torso
	trail.Attachment1.Position = Vector3.new(0, -1, 0)   -- Bottom of torso
	trail.Parent = rootPart
end

local function removeTrail()
	if trail then
		trail:Destroy()
		trail = nil
	end
end

local function createModelHighlight()
	if modelHighlight then return end
	modelHighlight = Instance.new("Highlight")
	modelHighlight.Adornee = character
	modelHighlight.FillColor = Color3.fromRGB(255, 255, 0) -- yellow
	modelHighlight.OutlineColor = Color3.fromRGB(255, 255, 0)
	modelHighlight.FillTransparency = 0.7
	modelHighlight.OutlineTransparency = 0.7
	modelHighlight.DepthMode = Enum.HighlightDepthMode.Occluded
	modelHighlight.Parent = character
end

local function removeModelHighlight()
	if modelHighlight then
		modelHighlight:Destroy()
		modelHighlight = nil
	end
end

local function playTransformedIdle()
	if transformedIdleTrack then return end
	transformedIdleTrack = humanoid:LoadAnimation(transformedIdleAnim)
	transformedIdleTrack.Priority = Enum.AnimationPriority.Idle
	transformedIdleTrack:Play()
end

local function stopTransformedIdle()
	if transformedIdleTrack then
		transformedIdleTrack:Stop()
		transformedIdleTrack = nil
	end
end

local function playTransformedRun()
	if transformedRunTrack then return end
	transformedRunTrack = humanoid:LoadAnimation(transformedRunAnim)
	transformedRunTrack.Priority = Enum.AnimationPriority.Movement
	transformedRunTrack:Play()
end

local function stopTransformedRun()
	if transformedRunTrack then
		transformedRunTrack:Stop()
		transformedRunTrack = nil
	end
end

local function updateAnimation()
	if not superSonic then return end

	-- If player is moving (velocity magnitude > 1), play run animation; else idle
	local velocity = rootPart.Velocity
	local horizontalSpeed = Vector3.new(velocity.X, 0, velocity.Z).Magnitude

	if horizontalSpeed > 1 then
		if not transformedRunTrack then
			stopTransformedIdle()
			playTransformedRun()
		end
	else
		if not transformedIdleTrack then
			stopTransformedRun()
			playTransformedIdle()
		end
	end
end

local function toggleSuperSonic(state)
	superSonic = state
	if superSonic then
		humanoid.WalkSpeed = speedBoost
		highlightAccessories()
		createTrail()
		createModelHighlight()
		playTransformedIdle()
		runService:BindToRenderStep("SuperSonicAnimationUpdate", Enum.RenderPriority.Character.Value, updateAnimation)
	else
		humanoid.WalkSpeed = normalSpeed
		clearHighlights()
		removeTrail()
		removeModelHighlight()
		stopTransformedIdle()
		stopTransformedRun()
		runService:UnbindFromRenderStep("SuperSonicAnimationUpdate")
	end
end

local function floatPlayer(duration, height)
	local root = character:FindFirstChild("HumanoidRootPart")
	if not root then return end

	local bodyPos = Instance.new("BodyPosition")
	bodyPos.MaxForce = Vector3.new(0, 1e5, 0)
	bodyPos.D = 1000
	bodyPos.P = 5000
	bodyPos.Position = root.Position + Vector3.new(0, height, 0)
	bodyPos.Parent = root

	task.delay(duration, function()
		if bodyPos then
			bodyPos:Destroy()
		end
	end)
end

local function summonEmeralds()
	local root = character:WaitForChild("HumanoidRootPart")
	local centerPosition = root.Position
	emeralds = {}

	floatPlayer(2.5, 6)

	for i = 1, 7 do
		local cubesStack = {}

		for level = 1, 3 do
			local size = cubeSizes[level]
			local part = Instance.new("Part")
			part.Size = size
			part.Shape = Enum.PartType.Block
			part.Color = emeraldColors[i]
			part.Anchored = true
			part.CanCollide = false
			part.Material = Enum.Material.Neon
			part.Transparency = 0
			part.Parent = workspace

			table.insert(cubesStack, part)
		end

		table.insert(emeralds, cubesStack)
	end

	local angle = 0
	local radius = 5
	local spinDuration = 2
	local startTime = tick()

	local spinConn
	spinConn = runService.RenderStepped:Connect(function(deltaTime)
		local elapsed = tick() - startTime
		angle = angle + math.rad(180) * deltaTime

		for i, cubesStack in ipairs(emeralds) do
			local offsetAngle = angle + (i / #emeralds) * math.pi * 2
			local x = math.cos(offsetAngle) * radius
			local z = math.sin(offsetAngle) * radius
			local baseY = centerPosition.Y + 3 + math.sin(offsetAngle * 2) * 1.5

			for level, part in ipairs(cubesStack) do
				local yPos = baseY
				for above = 1, level - 1 do
					yPos = yPos - (cubesStack[above].Size.Y / 2 + cubesStack[above + 1].Size.Y / 2)
				end
				part.Position = centerPosition + Vector3.new(x, yPos - centerPosition.Y, z)
			end
		end

		if elapsed >= spinDuration then
			spinConn:Disconnect()

			for _, cubesStack in ipairs(emeralds) do
				for _, part in ipairs(cubesStack) do
					local goal = { Position = root.Position + Vector3.new(0, 2, 0) }
					local tween = tweenService:Create(part, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.In), goal)
					tween:Play()

					tween.Completed:Connect(function()
						part:Destroy()
					end)
				end
			end

			task.delay(0.6, function()
				emeralds = {}
					flashScreen()
					toggleSuperSonic(true)
					floatPlayer(1, 0)
					transforming = false
			end)
		end
	end)
end

userInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.KeyCode == Enum.KeyCode.K and not transforming then
		if not superSonic then
			transforming = true
			summonEmeralds()
		else
			flashScreen()
			toggleSuperSonic(false)
		end
	end
end)

player.CharacterAdded:Connect(function(newChar)
	character = newChar
	humanoid = newChar:WaitForChild("Humanoid")
	rootPart = newChar:WaitForChild("HumanoidRootPart")
	superSonic = false
	humanoid.WalkSpeed = normalSpeed
	removeTrail()
	removeModelHighlight()
	stopTransformedIdle()
	stopTransformedRun()
	runService:UnbindFromRenderStep("SuperSonicAnimationUpdate")
end)
